<?xml version="1.0"?>

<robot name="servicebot_sim" xmlns:xacro="http://www.ros.org/wiki/xacro">
	<xacro:macro name="servicebot_sim">


		<gazebo reference="base_link">
			<material>Gazebo/Blue</material>
		</gazebo>

		<gazebo reference="reduktorteker1">
			<mu1 value="200.0" />
			<mu2 value="100.0" />
			<kp value="10000000.0" />
			<kd value="1.0" />
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
			<maxForce>1000.0</maxForce>
			<material>Gazebo/Green</material>

			<turnGravityOff>false</turnGravityOff>
		</gazebo>

		<gazebo reference="reduktorteker2">
			<mu1 value="200.0" />
			<mu2 value="100.0" />
			<kp value="10000000.0" />
			<kd value="1.0" />
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
			<material>Gazebo/Green</material>
			<turnGravityOff>false</turnGravityOff>
		</gazebo>


		<gazebo reference="chaster_wheel1">
			<mu1 value="200.0" />
			<mu2 value="100.0" />
			<kp value="10000000.0" />
			<kd value="1.0" />
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
			<material>Gazebo/Green</material>
			<turnGravityOff>false</turnGravityOff>
		</gazebo>

		<gazebo reference="chaster_wheel2">
			<mu1 value="200.0" />
			<mu2 value="100.0" />
			<kp value="10000000.0" />
			<kd value="1.0" />
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
			<material>Gazebo/Green</material>
			<turnGravityOff>false</turnGravityOff>
		</gazebo>

		<gazebo reference="chaster_wheel3">
			<mu1 value="200.0" />
			<mu2 value="100.0" />
			<kp value="10000000.0" />
			<kd value="1.0" />
			<minDepth>0.001</minDepth>
			<maxVel>1.0</maxVel>
			<material>Gazebo/Green</material>
			<turnGravityOff>false</turnGravityOff>
		</gazebo>


		<gazebo reference="upper_chassis">
			<material>Gazebo/Turquoise</material>
		</gazebo>

		<gazebo reference="motor1">
			<material>Gazebo/Red</material>
		</gazebo>

		<gazebo reference="motor2">
			<material>Gazebo/Red</material>
		</gazebo>

		<gazebo reference="motor_baglanti_plaka">
			<material>Gazebo/Yellow</material>

		</gazebo>
		<gazebo reference="motor_baglanti_plaka2">
			<material>Gazebo/Yellow</material>
		</gazebo>


		<!-- This block connects the wheel joint to an actuator (motor), which informs both
    simulation and visualization of the robot -->
		<transmission name="wheel_trans2">
			<type>transmission_interface/SimpleTransmission</type>
			<actuator name="wheel_motor2">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
			<joint name="reduktor_joint2">
				<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
			</joint>
		</transmission>

		<transmission name="wheel_trans1">
			<type>transmission_interface/SimpleTransmission</type>
			<actuator name="wheel_motor1">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
			<joint name="reduktor_joint1">
				<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
			</joint>
		</transmission>

		<!-- Gazebo plugin for ROS Control -->
		<!-- <gazebo>
			<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
				<robotNamespace>/</robotNamespace>
			</plugin>
		</gazebo> -->

		<gazebo>
			<plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
				<alwaysOn>true</alwaysOn>
				<updateRate>20</updateRate>
				<publishTf> true </publishTf>
				<leftJoint>reduktor_joint1</leftJoint>
				<rightJoint>reduktor_joint2</rightJoint>
				<wheelSeparation>.230</wheelSeparation>
				<wheelDiameter>0.070</wheelDiameter>
				<torque>5.0</torque>
				<commandTopic>/cmd_vel</commandTopic>
				<odometrySource>world</odometrySource> <!-- 'encoder' instead of 'world' is also possible -->
				<odometryTopic>/odom</odometryTopic> <!-- relative/name ,  /global/name  -->
				<odometryFrame>/odom</odometryFrame>
				<robotBaseFrame>/base_footprint</robotBaseFrame>
				<publishOdomTF> true </publishOdomTF>
				<publishWheelJointState>true</publishWheelJointState>
				<!-- Set to true to publish transforms for the wheel links, defaults to false -->
				<publishWheelTF>false</publishWheelTF>
				<wheelAcceleration> 2.8 </wheelAcceleration>
				<wheelTorque> 5.0 </wheelTorque>
				<legacyMode>true</legacyMode>
				<rosDebugLevel> Debug </rosDebugLevel> <!-- <rosDebugLevel>Debug</rosDebugLevel> -->
			</plugin>
		</gazebo>

		<!-- <gazebo reference="laser_sensor_link">
			<sensor type="gpu_ray" name="laser_sensor">
				<pose>0 0 0 0 0 0</pose>
				<visualize>false</visualize>
				<update_rate>40</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>720</samples>
							<resolution>1</resolution>
							<min_angle>-1.570796</min_angle>
							<max_angle>1.570796</max_angle>
						</horizontal>
					</scan>
					<range>
						<min>0.10</min>
						<max>30.0</max>
						<resolution>0.01</resolution>
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0.0</mean>
						<stddev>0.01</stddev>
					</noise>
				</ray>
				<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
					<topicName>/servicebot/laser/scan</topicName>
					<frameName>laser_sensor_link</frameName>
				</plugin>
			</sensor>
		</gazebo> -->

	</xacro:macro>
</robot>